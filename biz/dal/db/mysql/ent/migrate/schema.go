// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// SysApisColumns holds the columns for the "sys_apis" table.
	SysApisColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "path", Type: field.TypeString, Comment: "API path | API 路径"},
		{Name: "title", Type: field.TypeString, Comment: "API title | API 名称"},
		{Name: "description", Type: field.TypeString, Comment: "API description | API 描述"},
		{Name: "api_group", Type: field.TypeString, Comment: "API group | API 分组"},
		{Name: "method", Type: field.TypeString, Comment: "HTTP method | HTTP 请求类型", Default: "POST"},
	}
	// SysApisTable holds the schema information for the "sys_apis" table.
	SysApisTable = &schema.Table{
		Name:       "sys_apis",
		Columns:    SysApisColumns,
		PrimaryKey: []*schema.Column{SysApisColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "api_path_method",
				Unique:  true,
				Columns: []*schema.Column{SysApisColumns[5], SysApisColumns[9]},
			},
		},
	}
	// SysDictionariesColumns holds the columns for the "sys_dictionaries" table.
	SysDictionariesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[0:禁用;1:正常]", Default: 1},
		{Name: "title", Type: field.TypeString, Comment: "the title shown in the ui | 展示名称 （建议配合i18n）"},
		{Name: "name", Type: field.TypeString, Unique: true, Comment: "the name of dictionary for search | 字典搜索名称"},
		{Name: "description", Type: field.TypeString, Comment: "the description of dictionary | 字典描述"},
	}
	// SysDictionariesTable holds the schema information for the "sys_dictionaries" table.
	SysDictionariesTable = &schema.Table{
		Name:       "sys_dictionaries",
		Columns:    SysDictionariesColumns,
		PrimaryKey: []*schema.Column{SysDictionariesColumns[0]},
	}
	// SysDictionaryDetailsColumns holds the columns for the "sys_dictionary_details" table.
	SysDictionaryDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[0:禁用;1:正常]", Default: 1},
		{Name: "title", Type: field.TypeString, Comment: "the title shown in the ui | 展示名称 （建议配合i18n）"},
		{Name: "key", Type: field.TypeString, Comment: "key | 键"},
		{Name: "value", Type: field.TypeString, Comment: "value | 值"},
		{Name: "dictionary_id", Type: field.TypeInt64, Nullable: true, Comment: "Dictionary ID | 字典ID"},
	}
	// SysDictionaryDetailsTable holds the schema information for the "sys_dictionary_details" table.
	SysDictionaryDetailsTable = &schema.Table{
		Name:       "sys_dictionary_details",
		Columns:    SysDictionaryDetailsColumns,
		PrimaryKey: []*schema.Column{SysDictionaryDetailsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_dictionary_details_sys_dictionaries_dictionary_details",
				Columns:    []*schema.Column{SysDictionaryDetailsColumns[9]},
				RefColumns: []*schema.Column{SysDictionariesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "dictionarydetail_key_dictionary_id",
				Unique:  true,
				Columns: []*schema.Column{SysDictionaryDetailsColumns[7], SysDictionaryDetailsColumns[9]},
			},
		},
	}
	// SysLogsColumns holds the columns for the "sys_logs" table.
	SysLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "type", Type: field.TypeString, Comment: "type of log | 日志类型"},
		{Name: "method", Type: field.TypeString, Comment: "method of log | 日志请求方法"},
		{Name: "api", Type: field.TypeString, Comment: "api of log | 日志请求api"},
		{Name: "success", Type: field.TypeBool, Comment: "success of log | 日志请求是否成功"},
		{Name: "req_content", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "content of request log | 日志请求内容"},
		{Name: "resp_content", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "content of response log | 日志返回内容"},
		{Name: "ip", Type: field.TypeString, Nullable: true, Comment: "ip of log | 日志IP"},
		{Name: "user_agent", Type: field.TypeString, Nullable: true, Comment: "user_agent of log | 日志用户客户端"},
		{Name: "operatorsr", Type: field.TypeString, Nullable: true, Comment: "operator of log | 日志操作者"},
		{Name: "time", Type: field.TypeInt64, Nullable: true, Comment: "time of log(millisecond) | 日志时间(毫秒)"},
		{Name: "identity", Type: field.TypeInt64, Nullable: true, Comment: "1会员2员工 | 身份"},
	}
	// SysLogsTable holds the schema information for the "sys_logs" table.
	SysLogsTable = &schema.Table{
		Name:       "sys_logs",
		Columns:    SysLogsColumns,
		PrimaryKey: []*schema.Column{SysLogsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "logs_api",
				Unique:  false,
				Columns: []*schema.Column{SysLogsColumns[7]},
			},
		},
	}
	// SysMenusColumns holds the columns for the "sys_menus" table.
	SysMenusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "path", Type: field.TypeString, Nullable: true, Comment: "index path | 菜单路由路径", Default: ""},
		{Name: "name", Type: field.TypeString, Comment: "index name | 菜单名称"},
		{Name: "order_no", Type: field.TypeInt64, Comment: "sorting numbers | 排序编号", Default: 0},
		{Name: "disabled", Type: field.TypeInt64, Nullable: true, Comment: "disable status | 是否停用", Default: 0},
		{Name: "ignore", Type: field.TypeBool, Nullable: true, Comment: "当前路由是否渲染菜单项，为 true 的话不会在菜单中显示，但可通过路由地址访问", Default: false},
		{Name: "parent_id", Type: field.TypeInt64, Nullable: true, Comment: "parent menu ID | 父菜单ID"},
	}
	// SysMenusTable holds the schema information for the "sys_menus" table.
	SysMenusTable = &schema.Table{
		Name:       "sys_menus",
		Columns:    SysMenusColumns,
		PrimaryKey: []*schema.Column{SysMenusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_menus_sys_menus_children",
				Columns:    []*schema.Column{SysMenusColumns[10]},
				RefColumns: []*schema.Column{SysMenusColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SysMenuParamsColumns holds the columns for the "sys_menu_params" table.
	SysMenuParamsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "type", Type: field.TypeString, Comment: "pass parameters via params or query | 参数类型"},
		{Name: "key", Type: field.TypeString, Comment: "the key of parameters | 参数键"},
		{Name: "value", Type: field.TypeString, Comment: "the value of parameters | 参数值"},
		{Name: "menu_params", Type: field.TypeInt64, Nullable: true},
	}
	// SysMenuParamsTable holds the schema information for the "sys_menu_params" table.
	SysMenuParamsTable = &schema.Table{
		Name:       "sys_menu_params",
		Columns:    SysMenuParamsColumns,
		PrimaryKey: []*schema.Column{SysMenuParamsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_menu_params_sys_menus_params",
				Columns:    []*schema.Column{SysMenuParamsColumns[8]},
				RefColumns: []*schema.Column{SysMenusColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SysRolesColumns holds the columns for the "sys_roles" table.
	SysRolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[0:禁用;1:正常]", Default: 1},
		{Name: "name", Type: field.TypeString, Comment: "role name | 角色名"},
		{Name: "value", Type: field.TypeString, Unique: true, Comment: "role value for permission control in front end | 角色值，用于前端权限控制"},
		{Name: "default_router", Type: field.TypeString, Comment: "default menu : dashboard | 默认登录页面", Default: "dashboard"},
		{Name: "remark", Type: field.TypeString, Comment: "remark | 备注", Default: ""},
		{Name: "order_no", Type: field.TypeInt64, Comment: "order number | 排序编号", Default: 0},
		{Name: "apis", Type: field.TypeJSON, Comment: "apis"},
		{Name: "venue_id", Type: field.TypeInt64, Comment: "场馆ID", Default: 0},
	}
	// SysRolesTable holds the schema information for the "sys_roles" table.
	SysRolesTable = &schema.Table{
		Name:       "sys_roles",
		Columns:    SysRolesColumns,
		PrimaryKey: []*schema.Column{SysRolesColumns[0]},
	}
	// SurveyColumns holds the columns for the "survey" table.
	SurveyColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[0:禁用;1:正常]", Default: 1},
		{Name: "title", Type: field.TypeString, Nullable: true, Comment: "title", Default: ""},
		{Name: "pic", Type: field.TypeString, Nullable: true, Comment: "pic", Default: ""},
		{Name: "desc", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "desc", Default: ""},
		{Name: "start_at", Type: field.TypeTime, Nullable: true, Comment: "开始时间"},
		{Name: "end_at", Type: field.TypeTime, Nullable: true, Comment: "结束时间"},
	}
	// SurveyTable holds the schema information for the "survey" table.
	SurveyTable = &schema.Table{
		Name:       "survey",
		Columns:    SurveyColumns,
		PrimaryKey: []*schema.Column{SurveyColumns[0]},
	}
	// SurveyQuestionColumns holds the columns for the "survey_question" table.
	SurveyQuestionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[0:禁用;1:正常]", Default: 1},
		{Name: "parent_id", Type: field.TypeInt64, Nullable: true, Comment: "parent_id", Default: 0},
		{Name: "content", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "content", Default: ""},
		{Name: "type", Type: field.TypeString, Nullable: true, Comment: "type", Default: ""},
		{Name: "sort", Type: field.TypeInt64, Nullable: true, Comment: "sort", Default: 0},
		{Name: "required", Type: field.TypeInt64, Nullable: true, Comment: "是否必填 1必填 2选填", Default: 1},
		{Name: "options", Type: field.TypeJSON, Nullable: true, Comment: "存储选项"},
		{Name: "survey_id", Type: field.TypeInt64, Nullable: true, Comment: "survey_id", Default: 0},
	}
	// SurveyQuestionTable holds the schema information for the "survey_question" table.
	SurveyQuestionTable = &schema.Table{
		Name:       "survey_question",
		Columns:    SurveyQuestionColumns,
		PrimaryKey: []*schema.Column{SurveyQuestionColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "survey_question_survey_question",
				Columns:    []*schema.Column{SurveyQuestionColumns[12]},
				RefColumns: []*schema.Column{SurveyColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SurveyQuestionOptionsColumns holds the columns for the "survey_question_options" table.
	SurveyQuestionOptionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[0:禁用;1:正常]", Default: 1},
		{Name: "serial", Type: field.TypeString, Nullable: true, Comment: "serial", Default: ""},
		{Name: "content", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "content", Default: ""},
		{Name: "survey_question_id", Type: field.TypeInt64, Nullable: true, Comment: "survey_question_id", Default: 0},
	}
	// SurveyQuestionOptionsTable holds the schema information for the "survey_question_options" table.
	SurveyQuestionOptionsTable = &schema.Table{
		Name:       "survey_question_options",
		Columns:    SurveyQuestionOptionsColumns,
		PrimaryKey: []*schema.Column{SurveyQuestionOptionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "survey_question_options_survey_question_option",
				Columns:    []*schema.Column{SurveyQuestionOptionsColumns[8]},
				RefColumns: []*schema.Column{SurveyQuestionColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SurveyResponseColumns holds the columns for the "survey_response" table.
	SurveyResponseColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[0:禁用;1:正常]", Default: 1},
		{Name: "survey_id", Type: field.TypeInt64, Nullable: true, Comment: "survey_id", Default: 0},
		{Name: "ip", Type: field.TypeString, Nullable: true, Comment: "用户IP地址", Default: ""},
		{Name: "map", Type: field.TypeString, Nullable: true, Comment: "用户地图坐标", Default: ""},
		{Name: "device", Type: field.TypeString, Nullable: true, Comment: "设备信息", Default: ""},
		{Name: "audio", Type: field.TypeString, Nullable: true, Comment: "音频", Default: ""},
	}
	// SurveyResponseTable holds the schema information for the "survey_response" table.
	SurveyResponseTable = &schema.Table{
		Name:       "survey_response",
		Columns:    SurveyResponseColumns,
		PrimaryKey: []*schema.Column{SurveyResponseColumns[0]},
	}
	// SurveyResponseAnswersColumns holds the columns for the "survey_response_answers" table.
	SurveyResponseAnswersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[0:禁用;1:正常]", Default: 1},
		{Name: "survey_id", Type: field.TypeInt64, Nullable: true, Comment: "survey_id", Default: 0},
		{Name: "survey_response_id", Type: field.TypeInt64, Nullable: true, Comment: "survey_response_id", Default: 0},
		{Name: "survey_question_id", Type: field.TypeInt64, Nullable: true, Comment: "survey_question_id", Default: 0},
		{Name: "answer_text", Type: field.TypeString, Nullable: true, Comment: "回答文本"},
		{Name: "answer_value", Type: field.TypeInt64, Nullable: true, Comment: "回答数值", Default: 1},
	}
	// SurveyResponseAnswersTable holds the schema information for the "survey_response_answers" table.
	SurveyResponseAnswersTable = &schema.Table{
		Name:       "survey_response_answers",
		Columns:    SurveyResponseAnswersColumns,
		PrimaryKey: []*schema.Column{SurveyResponseAnswersColumns[0]},
	}
	// SysTokensColumns holds the columns for the "sys_tokens" table.
	SysTokensColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "user_id", Type: field.TypeInt64, Unique: true, Comment: " User's ID | 用户的ID"},
		{Name: "token", Type: field.TypeString, Comment: "Token string | Token 字符串"},
		{Name: "type", Type: field.TypeInt64, Nullable: true, Comment: "类型[1会员;2员工]"},
		{Name: "source", Type: field.TypeString, Comment: "Log in source such as GitHub | Token 来源 （本地为core, 第三方如github等）"},
		{Name: "expired_at", Type: field.TypeTime, Comment: " Expire time | 过期时间"},
		{Name: "user_token", Type: field.TypeInt64, Unique: true, Nullable: true},
	}
	// SysTokensTable holds the schema information for the "sys_tokens" table.
	SysTokensTable = &schema.Table{
		Name:       "sys_tokens",
		Columns:    SysTokensColumns,
		PrimaryKey: []*schema.Column{SysTokensColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_tokens_sys_users_token",
				Columns:    []*schema.Column{SysTokensColumns[10]},
				RefColumns: []*schema.Column{SysUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "token_user_id",
				Unique:  false,
				Columns: []*schema.Column{SysTokensColumns[5]},
			},
			{
				Name:    "token_expired_at",
				Unique:  false,
				Columns: []*schema.Column{SysTokensColumns[9]},
			},
		},
	}
	// SysUsersColumns holds the columns for the "sys_users" table.
	SysUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[0:禁用;1:正常]", Default: 1},
		{Name: "mobile", Type: field.TypeString, Unique: true, Comment: "mobile number | 手机号"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "姓名"},
		{Name: "gender", Type: field.TypeInt64, Nullable: true, Comment: "性别 | [0:女性;1:男性;3:保密]", Default: 3},
		{Name: "username", Type: field.TypeString, Unique: true, Comment: "user's login name | 登录名"},
		{Name: "password", Type: field.TypeString, Comment: "password | 密码"},
		{Name: "functions", Type: field.TypeJSON, Comment: "functions | 职能"},
		{Name: "job_time", Type: field.TypeInt64, Nullable: true, Comment: "job time | [1:全职;2:兼职;]", Default: 1},
		{Name: "detail", Type: field.TypeString, Nullable: true, Comment: "详情"},
		{Name: "side_mode", Type: field.TypeString, Nullable: true, Comment: "template mode | 布局方式", Default: "dark"},
		{Name: "base_color", Type: field.TypeString, Nullable: true, Comment: "base color of template | 后台页面色调", Default: "#fff"},
		{Name: "active_color", Type: field.TypeString, Nullable: true, Comment: "active color of template | 当前激活的颜色设定", Default: "#1890ff"},
		{Name: "email", Type: field.TypeString, Nullable: true, Comment: "email | 邮箱号"},
		{Name: "wecom", Type: field.TypeString, Nullable: true, Comment: "wecom | 微信号"},
		{Name: "organization", Type: field.TypeString, Nullable: true, Comment: "部门"},
		{Name: "default_venue_id", Type: field.TypeInt64, Nullable: true, Comment: "登陆后默认场馆ID"},
		{Name: "avatar", Type: field.TypeString, Nullable: true, Comment: "avatar | 头像路径", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "birthday", Type: field.TypeTime, Nullable: true, Comment: "出生日期"},
	}
	// SysUsersTable holds the schema information for the "sys_users" table.
	SysUsersTable = &schema.Table{
		Name:       "sys_users",
		Columns:    SysUsersColumns,
		PrimaryKey: []*schema.Column{SysUsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_id",
				Unique:  false,
				Columns: []*schema.Column{SysUsersColumns[0]},
			},
			{
				Name:    "user_username",
				Unique:  false,
				Columns: []*schema.Column{SysUsersColumns[9]},
			},
			{
				Name:    "user_mobile",
				Unique:  false,
				Columns: []*schema.Column{SysUsersColumns[6]},
			},
		},
	}
	// RoleMenusColumns holds the columns for the "role_menus" table.
	RoleMenusColumns = []*schema.Column{
		{Name: "role_id", Type: field.TypeInt64},
		{Name: "menu_id", Type: field.TypeInt64},
	}
	// RoleMenusTable holds the schema information for the "role_menus" table.
	RoleMenusTable = &schema.Table{
		Name:       "role_menus",
		Columns:    RoleMenusColumns,
		PrimaryKey: []*schema.Column{RoleMenusColumns[0], RoleMenusColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "role_menus_role_id",
				Columns:    []*schema.Column{RoleMenusColumns[0]},
				RefColumns: []*schema.Column{SysRolesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "role_menus_menu_id",
				Columns:    []*schema.Column{RoleMenusColumns[1]},
				RefColumns: []*schema.Column{SysMenusColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserRolesColumns holds the columns for the "user_roles" table.
	UserRolesColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "role_id", Type: field.TypeInt64},
	}
	// UserRolesTable holds the schema information for the "user_roles" table.
	UserRolesTable = &schema.Table{
		Name:       "user_roles",
		Columns:    UserRolesColumns,
		PrimaryKey: []*schema.Column{UserRolesColumns[0], UserRolesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_roles_user_id",
				Columns:    []*schema.Column{UserRolesColumns[0]},
				RefColumns: []*schema.Column{SysUsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_roles_role_id",
				Columns:    []*schema.Column{UserRolesColumns[1]},
				RefColumns: []*schema.Column{SysRolesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		SysApisTable,
		SysDictionariesTable,
		SysDictionaryDetailsTable,
		SysLogsTable,
		SysMenusTable,
		SysMenuParamsTable,
		SysRolesTable,
		SurveyTable,
		SurveyQuestionTable,
		SurveyQuestionOptionsTable,
		SurveyResponseTable,
		SurveyResponseAnswersTable,
		SysTokensTable,
		SysUsersTable,
		RoleMenusTable,
		UserRolesTable,
	}
)

func init() {
	SysApisTable.Annotation = &entsql.Annotation{
		Table: "sys_apis",
	}
	SysDictionariesTable.Annotation = &entsql.Annotation{
		Table: "sys_dictionaries",
	}
	SysDictionaryDetailsTable.ForeignKeys[0].RefTable = SysDictionariesTable
	SysDictionaryDetailsTable.Annotation = &entsql.Annotation{
		Table: "sys_dictionary_details",
	}
	SysLogsTable.Annotation = &entsql.Annotation{
		Table: "sys_logs",
	}
	SysMenusTable.ForeignKeys[0].RefTable = SysMenusTable
	SysMenusTable.Annotation = &entsql.Annotation{
		Table: "sys_menus",
	}
	SysMenuParamsTable.ForeignKeys[0].RefTable = SysMenusTable
	SysMenuParamsTable.Annotation = &entsql.Annotation{
		Table: "sys_menu_params",
	}
	SysRolesTable.Annotation = &entsql.Annotation{
		Table: "sys_roles",
	}
	SurveyTable.Annotation = &entsql.Annotation{
		Table: "survey",
	}
	SurveyQuestionTable.ForeignKeys[0].RefTable = SurveyTable
	SurveyQuestionTable.Annotation = &entsql.Annotation{
		Table: "survey_question",
	}
	SurveyQuestionOptionsTable.ForeignKeys[0].RefTable = SurveyQuestionTable
	SurveyQuestionOptionsTable.Annotation = &entsql.Annotation{
		Table: "survey_question_options",
	}
	SurveyResponseTable.Annotation = &entsql.Annotation{
		Table: "survey_response",
	}
	SurveyResponseAnswersTable.Annotation = &entsql.Annotation{
		Table: "survey_response_answers",
	}
	SysTokensTable.ForeignKeys[0].RefTable = SysUsersTable
	SysTokensTable.Annotation = &entsql.Annotation{
		Table: "sys_tokens",
	}
	SysUsersTable.Annotation = &entsql.Annotation{
		Table: "sys_users",
	}
	RoleMenusTable.ForeignKeys[0].RefTable = SysRolesTable
	RoleMenusTable.ForeignKeys[1].RefTable = SysMenusTable
	UserRolesTable.ForeignKeys[0].RefTable = SysUsersTable
	UserRolesTable.ForeignKeys[1].RefTable = SysRolesTable
}
