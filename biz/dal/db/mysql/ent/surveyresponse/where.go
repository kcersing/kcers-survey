// Code generated by ent, DO NOT EDIT.

package surveyresponse

import (
	"kcers-survey/biz/dal/db/mysql/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEQ(FieldUpdatedAt, v))
}

// Delete applies equality check predicate on the "delete" field. It's identical to DeleteEQ.
func Delete(v int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEQ(FieldDelete, v))
}

// CreatedID applies equality check predicate on the "created_id" field. It's identical to CreatedIDEQ.
func CreatedID(v int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEQ(FieldCreatedID, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEQ(FieldStatus, v))
}

// SurveyID applies equality check predicate on the "survey_id" field. It's identical to SurveyIDEQ.
func SurveyID(v int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEQ(FieldSurveyID, v))
}

// IP applies equality check predicate on the "ip" field. It's identical to IPEQ.
func IP(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEQ(FieldIP, v))
}

// Map applies equality check predicate on the "map" field. It's identical to MapEQ.
func Map(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEQ(FieldMap, v))
}

// Device applies equality check predicate on the "device" field. It's identical to DeviceEQ.
func Device(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEQ(FieldDevice, v))
}

// Audio applies equality check predicate on the "audio" field. It's identical to AudioEQ.
func Audio(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEQ(FieldAudio, v))
}

// StartedAt applies equality check predicate on the "started_at" field. It's identical to StartedAtEQ.
func StartedAt(v time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEQ(FieldStartedAt, v))
}

// CompletedAt applies equality check predicate on the "completed_at" field. It's identical to CompletedAtEQ.
func CompletedAt(v time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEQ(FieldCompletedAt, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNotNull(FieldCreatedAt))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNotNull(FieldUpdatedAt))
}

// DeleteEQ applies the EQ predicate on the "delete" field.
func DeleteEQ(v int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEQ(FieldDelete, v))
}

// DeleteNEQ applies the NEQ predicate on the "delete" field.
func DeleteNEQ(v int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNEQ(FieldDelete, v))
}

// DeleteIn applies the In predicate on the "delete" field.
func DeleteIn(vs ...int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldIn(FieldDelete, vs...))
}

// DeleteNotIn applies the NotIn predicate on the "delete" field.
func DeleteNotIn(vs ...int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNotIn(FieldDelete, vs...))
}

// DeleteGT applies the GT predicate on the "delete" field.
func DeleteGT(v int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldGT(FieldDelete, v))
}

// DeleteGTE applies the GTE predicate on the "delete" field.
func DeleteGTE(v int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldGTE(FieldDelete, v))
}

// DeleteLT applies the LT predicate on the "delete" field.
func DeleteLT(v int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldLT(FieldDelete, v))
}

// DeleteLTE applies the LTE predicate on the "delete" field.
func DeleteLTE(v int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldLTE(FieldDelete, v))
}

// DeleteIsNil applies the IsNil predicate on the "delete" field.
func DeleteIsNil() predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldIsNull(FieldDelete))
}

// DeleteNotNil applies the NotNil predicate on the "delete" field.
func DeleteNotNil() predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNotNull(FieldDelete))
}

// CreatedIDEQ applies the EQ predicate on the "created_id" field.
func CreatedIDEQ(v int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEQ(FieldCreatedID, v))
}

// CreatedIDNEQ applies the NEQ predicate on the "created_id" field.
func CreatedIDNEQ(v int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNEQ(FieldCreatedID, v))
}

// CreatedIDIn applies the In predicate on the "created_id" field.
func CreatedIDIn(vs ...int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldIn(FieldCreatedID, vs...))
}

// CreatedIDNotIn applies the NotIn predicate on the "created_id" field.
func CreatedIDNotIn(vs ...int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNotIn(FieldCreatedID, vs...))
}

// CreatedIDGT applies the GT predicate on the "created_id" field.
func CreatedIDGT(v int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldGT(FieldCreatedID, v))
}

// CreatedIDGTE applies the GTE predicate on the "created_id" field.
func CreatedIDGTE(v int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldGTE(FieldCreatedID, v))
}

// CreatedIDLT applies the LT predicate on the "created_id" field.
func CreatedIDLT(v int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldLT(FieldCreatedID, v))
}

// CreatedIDLTE applies the LTE predicate on the "created_id" field.
func CreatedIDLTE(v int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldLTE(FieldCreatedID, v))
}

// CreatedIDIsNil applies the IsNil predicate on the "created_id" field.
func CreatedIDIsNil() predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldIsNull(FieldCreatedID))
}

// CreatedIDNotNil applies the NotNil predicate on the "created_id" field.
func CreatedIDNotNil() predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNotNull(FieldCreatedID))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldLTE(FieldStatus, v))
}

// StatusIsNil applies the IsNil predicate on the "status" field.
func StatusIsNil() predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldIsNull(FieldStatus))
}

// StatusNotNil applies the NotNil predicate on the "status" field.
func StatusNotNil() predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNotNull(FieldStatus))
}

// SurveyIDEQ applies the EQ predicate on the "survey_id" field.
func SurveyIDEQ(v int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEQ(FieldSurveyID, v))
}

// SurveyIDNEQ applies the NEQ predicate on the "survey_id" field.
func SurveyIDNEQ(v int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNEQ(FieldSurveyID, v))
}

// SurveyIDIn applies the In predicate on the "survey_id" field.
func SurveyIDIn(vs ...int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldIn(FieldSurveyID, vs...))
}

// SurveyIDNotIn applies the NotIn predicate on the "survey_id" field.
func SurveyIDNotIn(vs ...int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNotIn(FieldSurveyID, vs...))
}

// SurveyIDGT applies the GT predicate on the "survey_id" field.
func SurveyIDGT(v int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldGT(FieldSurveyID, v))
}

// SurveyIDGTE applies the GTE predicate on the "survey_id" field.
func SurveyIDGTE(v int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldGTE(FieldSurveyID, v))
}

// SurveyIDLT applies the LT predicate on the "survey_id" field.
func SurveyIDLT(v int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldLT(FieldSurveyID, v))
}

// SurveyIDLTE applies the LTE predicate on the "survey_id" field.
func SurveyIDLTE(v int64) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldLTE(FieldSurveyID, v))
}

// IPEQ applies the EQ predicate on the "ip" field.
func IPEQ(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEQ(FieldIP, v))
}

// IPNEQ applies the NEQ predicate on the "ip" field.
func IPNEQ(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNEQ(FieldIP, v))
}

// IPIn applies the In predicate on the "ip" field.
func IPIn(vs ...string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldIn(FieldIP, vs...))
}

// IPNotIn applies the NotIn predicate on the "ip" field.
func IPNotIn(vs ...string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNotIn(FieldIP, vs...))
}

// IPGT applies the GT predicate on the "ip" field.
func IPGT(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldGT(FieldIP, v))
}

// IPGTE applies the GTE predicate on the "ip" field.
func IPGTE(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldGTE(FieldIP, v))
}

// IPLT applies the LT predicate on the "ip" field.
func IPLT(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldLT(FieldIP, v))
}

// IPLTE applies the LTE predicate on the "ip" field.
func IPLTE(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldLTE(FieldIP, v))
}

// IPContains applies the Contains predicate on the "ip" field.
func IPContains(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldContains(FieldIP, v))
}

// IPHasPrefix applies the HasPrefix predicate on the "ip" field.
func IPHasPrefix(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldHasPrefix(FieldIP, v))
}

// IPHasSuffix applies the HasSuffix predicate on the "ip" field.
func IPHasSuffix(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldHasSuffix(FieldIP, v))
}

// IPEqualFold applies the EqualFold predicate on the "ip" field.
func IPEqualFold(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEqualFold(FieldIP, v))
}

// IPContainsFold applies the ContainsFold predicate on the "ip" field.
func IPContainsFold(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldContainsFold(FieldIP, v))
}

// MapEQ applies the EQ predicate on the "map" field.
func MapEQ(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEQ(FieldMap, v))
}

// MapNEQ applies the NEQ predicate on the "map" field.
func MapNEQ(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNEQ(FieldMap, v))
}

// MapIn applies the In predicate on the "map" field.
func MapIn(vs ...string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldIn(FieldMap, vs...))
}

// MapNotIn applies the NotIn predicate on the "map" field.
func MapNotIn(vs ...string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNotIn(FieldMap, vs...))
}

// MapGT applies the GT predicate on the "map" field.
func MapGT(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldGT(FieldMap, v))
}

// MapGTE applies the GTE predicate on the "map" field.
func MapGTE(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldGTE(FieldMap, v))
}

// MapLT applies the LT predicate on the "map" field.
func MapLT(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldLT(FieldMap, v))
}

// MapLTE applies the LTE predicate on the "map" field.
func MapLTE(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldLTE(FieldMap, v))
}

// MapContains applies the Contains predicate on the "map" field.
func MapContains(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldContains(FieldMap, v))
}

// MapHasPrefix applies the HasPrefix predicate on the "map" field.
func MapHasPrefix(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldHasPrefix(FieldMap, v))
}

// MapHasSuffix applies the HasSuffix predicate on the "map" field.
func MapHasSuffix(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldHasSuffix(FieldMap, v))
}

// MapEqualFold applies the EqualFold predicate on the "map" field.
func MapEqualFold(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEqualFold(FieldMap, v))
}

// MapContainsFold applies the ContainsFold predicate on the "map" field.
func MapContainsFold(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldContainsFold(FieldMap, v))
}

// DeviceEQ applies the EQ predicate on the "device" field.
func DeviceEQ(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEQ(FieldDevice, v))
}

// DeviceNEQ applies the NEQ predicate on the "device" field.
func DeviceNEQ(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNEQ(FieldDevice, v))
}

// DeviceIn applies the In predicate on the "device" field.
func DeviceIn(vs ...string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldIn(FieldDevice, vs...))
}

// DeviceNotIn applies the NotIn predicate on the "device" field.
func DeviceNotIn(vs ...string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNotIn(FieldDevice, vs...))
}

// DeviceGT applies the GT predicate on the "device" field.
func DeviceGT(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldGT(FieldDevice, v))
}

// DeviceGTE applies the GTE predicate on the "device" field.
func DeviceGTE(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldGTE(FieldDevice, v))
}

// DeviceLT applies the LT predicate on the "device" field.
func DeviceLT(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldLT(FieldDevice, v))
}

// DeviceLTE applies the LTE predicate on the "device" field.
func DeviceLTE(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldLTE(FieldDevice, v))
}

// DeviceContains applies the Contains predicate on the "device" field.
func DeviceContains(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldContains(FieldDevice, v))
}

// DeviceHasPrefix applies the HasPrefix predicate on the "device" field.
func DeviceHasPrefix(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldHasPrefix(FieldDevice, v))
}

// DeviceHasSuffix applies the HasSuffix predicate on the "device" field.
func DeviceHasSuffix(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldHasSuffix(FieldDevice, v))
}

// DeviceEqualFold applies the EqualFold predicate on the "device" field.
func DeviceEqualFold(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEqualFold(FieldDevice, v))
}

// DeviceContainsFold applies the ContainsFold predicate on the "device" field.
func DeviceContainsFold(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldContainsFold(FieldDevice, v))
}

// AudioEQ applies the EQ predicate on the "audio" field.
func AudioEQ(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEQ(FieldAudio, v))
}

// AudioNEQ applies the NEQ predicate on the "audio" field.
func AudioNEQ(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNEQ(FieldAudio, v))
}

// AudioIn applies the In predicate on the "audio" field.
func AudioIn(vs ...string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldIn(FieldAudio, vs...))
}

// AudioNotIn applies the NotIn predicate on the "audio" field.
func AudioNotIn(vs ...string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNotIn(FieldAudio, vs...))
}

// AudioGT applies the GT predicate on the "audio" field.
func AudioGT(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldGT(FieldAudio, v))
}

// AudioGTE applies the GTE predicate on the "audio" field.
func AudioGTE(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldGTE(FieldAudio, v))
}

// AudioLT applies the LT predicate on the "audio" field.
func AudioLT(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldLT(FieldAudio, v))
}

// AudioLTE applies the LTE predicate on the "audio" field.
func AudioLTE(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldLTE(FieldAudio, v))
}

// AudioContains applies the Contains predicate on the "audio" field.
func AudioContains(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldContains(FieldAudio, v))
}

// AudioHasPrefix applies the HasPrefix predicate on the "audio" field.
func AudioHasPrefix(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldHasPrefix(FieldAudio, v))
}

// AudioHasSuffix applies the HasSuffix predicate on the "audio" field.
func AudioHasSuffix(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldHasSuffix(FieldAudio, v))
}

// AudioEqualFold applies the EqualFold predicate on the "audio" field.
func AudioEqualFold(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEqualFold(FieldAudio, v))
}

// AudioContainsFold applies the ContainsFold predicate on the "audio" field.
func AudioContainsFold(v string) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldContainsFold(FieldAudio, v))
}

// StartedAtEQ applies the EQ predicate on the "started_at" field.
func StartedAtEQ(v time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEQ(FieldStartedAt, v))
}

// StartedAtNEQ applies the NEQ predicate on the "started_at" field.
func StartedAtNEQ(v time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNEQ(FieldStartedAt, v))
}

// StartedAtIn applies the In predicate on the "started_at" field.
func StartedAtIn(vs ...time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldIn(FieldStartedAt, vs...))
}

// StartedAtNotIn applies the NotIn predicate on the "started_at" field.
func StartedAtNotIn(vs ...time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNotIn(FieldStartedAt, vs...))
}

// StartedAtGT applies the GT predicate on the "started_at" field.
func StartedAtGT(v time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldGT(FieldStartedAt, v))
}

// StartedAtGTE applies the GTE predicate on the "started_at" field.
func StartedAtGTE(v time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldGTE(FieldStartedAt, v))
}

// StartedAtLT applies the LT predicate on the "started_at" field.
func StartedAtLT(v time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldLT(FieldStartedAt, v))
}

// StartedAtLTE applies the LTE predicate on the "started_at" field.
func StartedAtLTE(v time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldLTE(FieldStartedAt, v))
}

// CompletedAtEQ applies the EQ predicate on the "completed_at" field.
func CompletedAtEQ(v time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldEQ(FieldCompletedAt, v))
}

// CompletedAtNEQ applies the NEQ predicate on the "completed_at" field.
func CompletedAtNEQ(v time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNEQ(FieldCompletedAt, v))
}

// CompletedAtIn applies the In predicate on the "completed_at" field.
func CompletedAtIn(vs ...time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldIn(FieldCompletedAt, vs...))
}

// CompletedAtNotIn applies the NotIn predicate on the "completed_at" field.
func CompletedAtNotIn(vs ...time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldNotIn(FieldCompletedAt, vs...))
}

// CompletedAtGT applies the GT predicate on the "completed_at" field.
func CompletedAtGT(v time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldGT(FieldCompletedAt, v))
}

// CompletedAtGTE applies the GTE predicate on the "completed_at" field.
func CompletedAtGTE(v time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldGTE(FieldCompletedAt, v))
}

// CompletedAtLT applies the LT predicate on the "completed_at" field.
func CompletedAtLT(v time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldLT(FieldCompletedAt, v))
}

// CompletedAtLTE applies the LTE predicate on the "completed_at" field.
func CompletedAtLTE(v time.Time) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.FieldLTE(FieldCompletedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.SurveyResponse) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.SurveyResponse) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.SurveyResponse) predicate.SurveyResponse {
	return predicate.SurveyResponse(sql.NotPredicates(p))
}
